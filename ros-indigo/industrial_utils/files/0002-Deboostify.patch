From 2bcdfc275fdf477ce75e6e51409b1fbf219c08c6 Mon Sep 17 00:00:00 2001
From: "Hunter L. Allen" <hunter@openrobotics.org>
Date: Wed, 24 Jan 2018 03:34:50 +0000
Subject: [PATCH 2/2] Remove boost

---
 include/industrial_utils/param_utils.h | 3 ++-
 include/industrial_utils/utils.h       | 4 +++-
 src/param_utils.cpp                    | 4 ++--
 src/utils.cpp                          | 6 +++---
 4 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/include/industrial_utils/param_utils.h b/include/industrial_utils/param_utils.h
index d5c0dc7..4fe96b0 100644
--- a/include/industrial_utils/param_utils.h
+++ b/include/industrial_utils/param_utils.h
@@ -34,8 +34,9 @@
 #define PARAM_UTILS_H_
 
 #include <map>
-#include <vector>
+#include <memory>
 #include <string>
+#include <vector>
 
 namespace industrial_utils
 {
diff --git a/include/industrial_utils/utils.h b/include/industrial_utils/utils.h
index 8c9f3af..469af44 100644
--- a/include/industrial_utils/utils.h
+++ b/include/industrial_utils/utils.h
@@ -34,6 +34,8 @@
 
 #include <vector>
 #include <string>
+#include <memory>
+
 #include "urdf/model.h"
 
 namespace industrial_utils
@@ -75,7 +77,7 @@ bool isSame(const std::vector<std::string> & lhs, const std::vector<std::string>
  *
  * \return true if successful, false if error occurred (e.g. branching tree)
  */
-bool findChainJointNames(const boost::shared_ptr<const urdf::Link> &link, bool ignore_fixed,
+bool findChainJointNames(const std::shared_ptr<const urdf::Link> &link, bool ignore_fixed,
 		                 std::vector<std::string> &joint_names);
 
 } //industrial_utils
diff --git a/src/param_utils.cpp b/src/param_utils.cpp
index 17e6370..0cfe4d9 100644
--- a/src/param_utils.cpp
+++ b/src/param_utils.cpp
@@ -135,7 +135,7 @@ bool getJointNames(const std::string joint_list_param, const std::string urdf_pa
 bool getJointVelocityLimits(const std::string urdf_param_name, std::map<std::string, double> &velocity_limits)
 {
   urdf::Model model;
-  std::map<std::string, boost::shared_ptr<urdf::Joint> >::iterator iter;
+  std::map<std::string, std::shared_ptr<urdf::Joint> >::iterator iter;
 
   if (!ros::param::has(urdf_param_name) || !model.initParam(urdf_param_name))
     return false;
@@ -144,7 +144,7 @@ bool getJointVelocityLimits(const std::string urdf_param_name, std::map<std::str
   for (iter=model.joints_.begin(); iter!=model.joints_.end(); ++iter)
   {
     std::string joint_name(iter->first);
-    boost::shared_ptr<urdf::JointLimits> limits = iter->second->limits;
+    std::shared_ptr<urdf::JointLimits> limits = iter->second->limits;
     if ( limits && (limits->velocity > 0) )
       velocity_limits.insert(std::pair<std::string,double>(joint_name,limits->velocity));
   }
diff --git a/src/utils.cpp b/src/utils.cpp
index c78dcd4..25a73cd 100644
--- a/src/utils.cpp
+++ b/src/utils.cpp
@@ -69,11 +69,11 @@ bool isSame(const std::vector<std::string> & lhs, const std::vector<std::string>
   return rtn;
 }
 
-bool findChainJointNames(const boost::shared_ptr<const urdf::Link> &link, bool ignore_fixed,
+bool findChainJointNames(const std::shared_ptr<const urdf::Link> &link, bool ignore_fixed,
 		                 std::vector<std::string> &joint_names)
 {
-  typedef std::vector<boost::shared_ptr<urdf::Joint> > joint_list;
-  typedef std::vector<boost::shared_ptr<urdf::Link> > link_list;
+  typedef std::vector<std::shared_ptr<urdf::Joint> > joint_list;
+  typedef std::vector<std::shared_ptr<urdf::Link> > link_list;
   std::string found_joint, found_link;
 
   // check for joints directly connected to this link
-- 
2.16.0
